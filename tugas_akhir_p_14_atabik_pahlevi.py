# -*- coding: utf-8 -*-
"""Tugas Akhir P-14_Atabik Pahlevi

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12z9IGQiQXBn3HQe0G0B-0sHZ35non7OZ
"""

import sqlite3
import shutil
import os

# -------------------------------
# Database Setup
# -------------------------------
def init_db():
    conn = sqlite3.connect('inventory.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS items (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            stock INTEGER NOT NULL,
            price REAL NOT NULL
        )
    ''')
    conn.commit()
    conn.close()

# -------------------------------
# CRUD Functions
# -------------------------------
def add_item():
    name = input("Nama Barang: ")
    stock = int(input("Jumlah Stok: "))
    price = float(input("Harga Barang: "))

    conn = sqlite3.connect('inventory.db')
    cursor = conn.cursor()
    cursor.execute("INSERT INTO items (name, stock, price) VALUES (?, ?, ?)", (name, stock, price))
    conn.commit()
    conn.close()
    print(f"Barang '{name}' berhasil ditambahkan.")

def view_items():
    conn = sqlite3.connect('inventory.db')
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM items")
    rows = cursor.fetchall()
    print("\nID | Nama | Stok | Harga")
    print("------------------------------")
    for row in rows:
        print(f"{row[0]} | {row[1]} | {row[2]} | {row[3]}")
    conn.close()

def search_items():
    keyword = input("Masukkan kata kunci: ")
    conn = sqlite3.connect('inventory.db')
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM items WHERE name LIKE ?", ('%' + keyword + '%',))
    rows = cursor.fetchall()
    print("\nHasil Pencarian:")
    print("ID | Nama | Stok | Harga")
    print("------------------------------")
    for row in rows:
        print(f"{row[0]} | {row[1]} | {row[2]} | {row[3]}")
    conn.close()

def update_item():
    id = int(input("Masukkan ID barang yang ingin diupdate: "))
    new_stock = int(input("Stok baru: "))
    new_price = float(input("Harga baru: "))

    conn = sqlite3.connect('inventory.db')
    cursor = conn.cursor()
    cursor.execute("UPDATE items SET stock = ?, price = ? WHERE id = ?", (new_stock, new_price, id))
    conn.commit()
    conn.close()
    print("Data barang berhasil diupdate.")

def delete_item():
    id = int(input("Masukkan ID barang yang ingin dihapus: "))
    conn = sqlite3.connect('inventory.db')
    cursor = conn.cursor()
    cursor.execute("DELETE FROM items WHERE id = ?", (id,))
    conn.commit()
    conn.close()
    print("Barang berhasil dihapus.")

# -------------------------------
# Laporan & Backup
# -------------------------------
def generate_report():
    conn = sqlite3.connect('inventory.db')
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM items")
    rows = cursor.fetchall()
    with open('report.csv', 'w') as f:
        f.write('ID,Name,Stock,Price\n')
        for row in rows:
            f.write(f"{row[0]},{row[1]},{row[2]},{row[3]}\n")
    conn.close()
    print("Laporan berhasil dibuat: report.csv")

def backup_data():
    if not os.path.exists('backup'):
        os.makedirs('backup')
    shutil.copy('inventory.db', 'backup/inventory_backup.db')
    print("Backup database berhasil disimpan di folder backup.")

# -------------------------------
# Main Menu
# -------------------------------
def main():
    init_db()
    while True:
        print("\n=== SISTEM INVENTORI BARANG (CLI) ===")
        print("1. Tambah Barang")
        print("2. Lihat Semua Barang")
        print("3. Cari Barang")
        print("4. Update Barang")
        print("5. Hapus Barang")
        print("6. Buat Laporan")
        print("7. Backup Data")
        print("8. Keluar")

        choice = input("Pilih menu: ")

        if choice == '1':
            add_item()
        elif choice == '2':
            view_items()
        elif choice == '3':
            search_items()
        elif choice == '4':
            update_item()
        elif choice == '5':
            delete_item()
        elif choice == '6':
            generate_report()
        elif choice == '7':
            backup_data()
        elif choice == '8':
            print("Keluar dari program.")
            break
        else:
            print("Pilihan tidak valid.")

if __name__ == "__main__":
    main()